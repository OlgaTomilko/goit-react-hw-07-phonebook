{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-operations.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/Modal/Modal.js","components/Phonebook/Phonebook.js","App.js","index.js"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","updateFilter","itemsReducer","createReducer","_","payload","state","filter","id","Number","loading","filterReducer","combineReducers","items","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","contactsReducer","devTools","process","getContacts","getFilter","getLoading","console","log","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","axios","defaults","baseURL","number","dispatch","contact","actions","post","then","data","catch","error","contactId","delete","a","get","useStyles","makeStyles","form","width","height","display","flexDirection","justifyContent","connect","contactsSelectors","onAdd","value","contactsOperations","classes","item","onInputChange","event","target","className","type","onChange","Button","variant","color","size","onClick","map","alert","isLoading","fetchContacts","onDelete","onClose","useEffect","handlerDelete","currentTarget","modalRoot","document","querySelector","Modal","handleKeyDown","code","props","handleBackdropClick","window","addEventListener","this","removeEventListener","createPortal","children","Component","Phonebook","showModal","toggleModal","setState","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6ef62758.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\r\nexport const fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\r\nexport const fetchContactError = createAction(\"contacts/fetchContactError\");\r\n\r\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nexport const addContactError = createAction(\"contacts/addContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"contacts/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"contacts/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\r\n\r\nexport const updateFilter = createAction(\"phonebook/Update_filter\");\r\n\r\n// export default {\r\n//   fetchContactRequest,\r\n//   fetchContactSuccess,\r\n//   fetchContactError,\r\n//   addContactRequest,\r\n//   addContactSuccess,\r\n//   addContactError,\r\n//   deleteContactRequest,\r\n//   deleteContactSuccess,\r\n//   deleteContactError,\r\n//   updateFilter,\r\n// };\r\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\r\n// import { combineReducers } from \"redux\";\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  updateFilter,\r\n} from \"./contacts-actions\";\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== Number(payload)),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [updateFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n  loading,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\n// import { combineReducers } from \"redux\";\r\nimport {\r\n  // persistStore,\r\n  // persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\n\r\n// const contactsPersistConfige = {\r\n//   key: \"contacts\",\r\n//   storage,\r\n//   blacklist: [\"filter\"],\r\n// };\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: contactsReducer,\r\n// });\r\n\r\n// const persistedReducer = persistReducer(contactsPersistConfige, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\nexport default store;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getContacts = (state) => state.contacts.items;\r\n\r\nconst getFilter = (state) => state.contacts.filter;\r\n\r\nconst getLoading = (state) => {\r\n  console.log(state.contacts.loading);\r\n  return state.contacts.loading;\r\n};\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n\r\nexport default {\r\n  getContacts,\r\n  getFilter,\r\n  getLoading,\r\n  getVisibleContacts,\r\n};\r\n\r\n// const getVisibleContacts = (state) => {\r\n//   const contacts = getContacts(state);\r\n//   const filter = getFilter(state);\r\n//   const normalizedFilter = filter.toLowerCase();\r\n//   return contacts.filter(({ name }) =>\r\n//     name.toLowerCase().includes(normalizedFilter)\r\n//   );\r\n// };\r\n","import axios from \"axios\";\r\nimport * as actions from \"./contacts-actions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:4040\";\r\n\r\nconst fetchContacts = () => async (dispatch) => {\r\n  dispatch(actions.fetchContactRequest());\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    dispatch(actions.fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(actions.fetchContactError(error));\r\n  }\r\n};\r\n\r\nconst addContact = ({ name, number }) => (dispatch) => {\r\n  const contact = { name, number };\r\n\r\n  dispatch(actions.addContactRequest());\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n    .catch((error) => dispatch(actions.addContactError(error)));\r\n};\r\n\r\nconst deleteContact = (contactId) => (dispatch) => {\r\n  dispatch(actions.deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(actions.deleteContactSuccess(contactId)))\r\n    .catch((error) => dispatch(actions.deleteContactError(error)));\r\n};\r\n\r\nexport default { addContact, deleteContact, fetchContacts };\r\n","import PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { contactsOperations, contactsSelectors } from \"../../redux/contacts\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles({\r\n  form: {\r\n    width: 275,\r\n    height: 150,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n});\r\n\r\nconst ContactForm = ({ contacts, onAdd }) => {\r\n  const classes = useStyles();\r\n  let item = { name: \"\", number: \"\" };\r\n\r\n  const onInputChange = (event) => {\r\n    item = { ...item, [event.target.id]: event.target.value };\r\n  };\r\n\r\n  const isAlreadyContact = () => {\r\n    const Names = contacts.map((contact) => contact.name);\r\n    return Names.includes(item.name);\r\n  };\r\n\r\n  const onSave = () => {\r\n    isAlreadyContact()\r\n      ? alert(`${item.name} is already in contacts.`)\r\n      : onAdd(item);\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form}>\r\n      <label>Name</label>\r\n      <input type=\"text\" onChange={onInputChange} id=\"name\"></input>\r\n      <label>Number</label>\r\n      <input type=\"text\" onChange={onInputChange} id=\"number\"></input>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        type=\"button\"\r\n        onClick={onSave}\r\n      >\r\n        Add contact\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: contactsSelectors.getContacts(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchProps = (dispatch) => {\r\n  return {\r\n    onAdd: (value) => dispatch(contactsOperations.addContact(value)),\r\n  };\r\n};\r\n\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  onAdd: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(ContactForm);\r\n","import PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateFilter } from \"../../redux/contacts\";\r\n\r\nconst Filter = ({ updateFilter }) => {\r\n  return (\r\n    <div>\r\n      <p>Find contacts by name</p>\r\n      <input type=\"text\" onChange={updateFilter} id=\"find\"></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchProps = (dispatch) => {\r\n  return {\r\n    updateFilter: (event) => dispatch(updateFilter(event.target.value)),\r\n  };\r\n};\r\n\r\nFilter.propTypes = {\r\n  updateFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, mapDispatchProps)(Filter);\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { contactsOperations, contactsSelectors } from \"../../redux/contacts\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst ContactList = ({\r\n  // filter,\r\n  contacts,\r\n  isLoading,\r\n  onDelete,\r\n  onClose,\r\n  fetchContacts,\r\n}) => {\r\n  useEffect(() => fetchContacts(), []);\r\n\r\n  // const onFilterContacts = () => {\r\n  //   const filterContacts = contacts.filter((contact) =>\r\n  //     contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  //   );\r\n  //   return filterContacts;\r\n  // };\r\n\r\n  const handlerDelete = (event) => {\r\n    onDelete(event.currentTarget.id);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <p>Loading...</p>}\r\n      <ul>\r\n        {\r\n          // (filter ? onFilterContacts() : contacts)\r\n          contacts.map(({ id, name, number }) => (\r\n            <li key={id}>\r\n              {name}: {number}\r\n              <Button\r\n                color=\"secondary\"\r\n                type=\"button\"\r\n                id={id}\r\n                onClick={handlerDelete}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </li>\r\n          ))\r\n        }\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: contactsSelectors.getVisibleContacts(state),\r\n    filter: contactsSelectors.getFilter(state),\r\n    isLoading: contactsSelectors.getLoading(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchProps = (dispatch) => ({\r\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n  onDelete: (id) => dispatch(contactsOperations.deleteContact(id)),\r\n});\r\n\r\nContactList.propTypes = {\r\n  // filter: PropTypes.string,\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  onDelete: PropTypes.func.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(ContactList);\r\n","import React, { Component } from \"react\";\r\n// import React, { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport \"./Modal.css\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\n// ========== HOOK =============\r\n\r\n// const Modal = ({ onClose, children }) => {\r\n//   //   componentDidMount\r\n//   useEffect(() => {\r\n//     window.addEventListener(\"keydown\", handleKeyDown);\r\n//     //   componentWillUnmount\r\n//     return () => {\r\n//       window.removeEventListener(\"keydown\", handleKeyDown);\r\n//     };\r\n//   }, []);\r\n\r\n//   const handleKeyDown = (event) => {\r\n//     if (event.code === \"Escape\") {\r\n//       onClose();\r\n//     }\r\n//   };\r\n\r\n//   const handleBackdropClick = (event) => {\r\n//     if (event.target === event.currentTarget) {\r\n//       onClose();\r\n//     }\r\n//   };\r\n\r\n//   return createPortal(\r\n//     <div className=\"Modal__backdrop\" onClick={handleBackdropClick}>\r\n//       <div className=\"Modal__content\">{children}</div>\r\n//     </div>,\r\n//     modalRoot\r\n//   );\r\n// };\r\n\r\n// export default Modal;\r\n\r\n// =========== CLASS =============\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (event) => {\r\n    if (event.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = (event) => {\r\n    if (event.target === event.currentTarget) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Modal__backdrop\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal__content\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport ContactList from \"../ContactList/ContactList\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class Phonebook extends Component {\r\n  state = {\r\n    showModal: false,\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.showModal && (\r\n          <Modal onClose={this.toggleModal}>\r\n            <h1>Контакт удален</h1>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              type=\"button\"\r\n              onClick={this.toggleModal}\r\n            >\r\n              Закрыть\r\n            </Button>\r\n          </Modal>\r\n        )}\r\n\r\n        <h1>Phonebook</h1>\r\n        <ContactForm />\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        <ContactList onClose={this.toggleModal} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\nimport Phonebook from \"./components/Phonebook/Phonebook\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Phonebook />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n// import { PersistGate } from \"redux-persist/integration/react\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}